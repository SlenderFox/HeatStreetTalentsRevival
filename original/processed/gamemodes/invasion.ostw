import "../globalvars.ostw";
import "../subroutines.ostw";

globalvar Vector[] gIvDomObjectiveAllPosList;

void iv_defend_portal() "IV Subroutine: Defend Portal"
{
	gMoneyAmount += 95;
	if (gObjectivePhaseNumber == 1)
	{
		gEnableNormalSpawns = true;
		call_reinforcements();
		async! play_incoming_sound_twice();
		pAbVar2 = TotalTimeElapsed() + 10;
	}
	gTemp2 = PlayersWithinRadius(
		gIvDomObjectivePos,
		15,
		Team.Team1,
		RadiusLOS.Surfaces
	).Filter(
		p => p.pIsCombatant
		&& !HasStatus(p, Status.PhasedOut)
		&& IsInLineOfSight(EventPlayer(), p, BarrierLOS.EnemyBarriersBlock)
	);
	for (gIterator = 0; CountOf(gTemp2); 1)
	{
		ApplyImpulse(
			gTemp2[gIterator],
			DirectionFromAngles(
				HorizontalAngleFromDirection(
					VectorTowards(gIvDomObjectivePos, gTemp2[gIterator])
				),
				-20
			),
			25,
			Relative.ToWorld,
			ContraryMotion.CancelXYZ
		);
	}
	gTemp1 = RandomInteger(0, 5);
	if (gTemp1 == 5 && gWaveNumber >= 7)
	{
		gTemp2.pTasedEndT = TotalTimeElapsed() + 3;
	}
	else if (gTemp1 <= 1 && gWaveNumber >= 4)
	{
		SetUltimateCharge(EventPlayer(), 100);
		PressButton(EventPlayer(), Button.Ultimate);
	}
	else if (gTemp1 == 3 && gWaveNumber >= 4)
	{
		PressButton(EventPlayer(), Button.Ability1);
	}
	PlayEffect(
		AllPlayers(Team.All),
		PlayEffect.ExplosionSound,
		Color.White,
		EventPlayer(),
		200
	);
	PlayEffect(
		AllPlayers(Team.All),
		PlayEffect.BadExplosion,
		gTemp1 == 5 && gWaveNumber >= 7
			? Color.Purple
			: Color.Red,
		gIvDomObjectivePos + 1.11 * Up(),
		10
	);
}

rule: "IV Team 2 Slot 0: Create Portal Entities"
Event.OngoingPlayer
Team.Team2
Player.Slot0
{
	CreateProgressBarHudText(
		gObjectivePhaseNumber == 1 || gObjectivePhaseNumber == 2
			? AllPlayers()
			: [],
		gObjectivePhaseNumber == 1
			? 200 * NormalizedHealth(EventPlayer())
			: gObjectiveProgress,
		gObjectivePhaseNumber == 1
			? "Destroy the Portal"
			: "Portal closing",
		Location.Top,
		-97,
		gObjectivePhaseNumber == 1
			? gSpecialSpawnsCount > 0
				? Color.Blue
				: CustomColor(
					Max(200, 255 - (TotalTimeElapsed() - pAbVar2) * 165),
					Max(0, 255 - (TotalTimeElapsed() - pAbVar2) * 765),
					Max(19, 255 - (TotalTimeElapsed() - pAbVar2) * 708),
					255
				)
			: Color.Yellow,
		Color.White,
		ProgressBarHudEvaluation.VisibleToValuesAndColor,
		Spectators.DefaultVisibility
	);
	CreateIcon(
		gObjectivePhaseNumber == 1 || gObjectivePhaseNumber == 2
			? AllPlayers()
			: [],
		gIvDomObjectivePos + 2 * Up(),
		Icon.ExclamationMark,
		IconRev.VisibleToAndPosition,
		Color.Yellow,
		true
	);
	CreateInWorldText(
		gObjectivePhaseNumber == 1 || gObjectivePhaseNumber == 2
			? AllPlayers()
			: [],
		gObjectivePhaseNumber == 1
			? "Destroy the Portal"
			: "Portal closing",
		gIvDomObjectivePos + 1.7 * Up(),
		1.5,
		Clipping.DoNotClip,
		InworldTextRev.VisibleToPositionAndString,
		Color.Yellow,
		Spectators.DefaultVisibility
	);
	CreateEffect(
		gObjectivePhaseNumber == 1 || gObjectivePhaseNumber == 2
			? AllPlayers()
			: [],
		Effect.Sphere,
		gObjectivePhaseNumber == 1
			? Color.Red
			: Color.Yellow,
		gIvDomObjectivePos + 1.11 * Up(),
		0.85 + (
			gObjectivePhaseNumber == 1
				? 0
				: 0.3 * SineFromRadians(6 * TotalTimeElapsed())
		),
		EffectRev.VisibleToPositionRadiusAndColor
	);
	CreateEffect(
		gObjectivePhaseNumber == 1 || gObjectivePhaseNumber == 2
			? AllPlayers()
			: [],
		Effect.BadAura,
		Color.Red,
		gIvDomObjectivePos + 1.11 * Up(),
		1,
		EffectRev.VisibleToPositionAndRadius
	);
	CreateEffect(
		gObjectivePhaseNumber == 1 && (pAbVar2 >= TotalTimeElapsed() || gSpecialSpawnsCount > 0)
			? AllPlayers()
			: [],
		Effect.LightShaft,
		Color.White,
		gIvDomObjectivePos - 2 * Up(),
		1,
		EffectRev.VisibleToPositionAndRadius
	);
}

rule: "IV Team 2 Torbjörn: Start Portal Mode, Open (Phase 1), Breakpoint End Time (2), Set Health to half to remove armour"
Event.OngoingPlayer
Team.Team2
Player.Torbjorn
{
	gIvDomObjectivePos = gIvDomObjectiveAllPosList.Remove(gIvDomObjectivePos).Random();
	StartForcingPlayerPosition(EventPlayer(), gIvDomObjectivePos, false);
	DisableMovementCollisionWithEnvironment(EventPlayer(), true);
	SetInvisible(EventPlayer(), InvisibleTo.All);
	SetStatus(EventPlayer(), null, Status.Unkillable, 9999);
	SetPlayerHealth(EventPlayer(), 0.5 * MaxHealth(EventPlayer()));
}

rule: "IV Team 2: Force portal to shoot lava"
Event.OngoingPlayer
Team.Team2
Player.Torbjorn
if (IsUsingUltimate(EventPlayer()))
{
	SetFacing(
		EventPlayer(),
		DirectionTowards(
			EventPlayer().EyePosition(),
			Vector(
				RandomInteger(-500, 500),
				RandomInteger(-500, 500),
				RandomInteger(-500, 500)
			)
		),
		Relative.ToWorld
	);
	PressButton(EventPlayer(), Button.PrimaryFire);
	Wait(0.25, WaitBehavior.IgnoreCondition);
	LoopIfConditionIsTrue();
}

rule: "IV Team 2 Torbjörn: Health reaches Breakpoint, Is Dead -> Portal Closing (Phase 2)"
Event.OngoingPlayer
Team.Team2
Player.Torbjorn
if (NormalizedHealth(EventPlayer()) <= 0.333)
{
	SetPlayerHealth(EventPlayer(), 0.333 * MaxHealth(EventPlayer()));
	iv_defend_portal();
	WaitUntil(NormalizedHealth(EventPlayer()) <= 0.166, 99999);
	SetPlayerHealth(EventPlayer(), 0.166 * MaxHealth(EventPlayer()));
	iv_defend_portal();
	ClearStatus(EventPlayer(), Status.Unkillable);
	WaitUntil(EventPlayer().IsDead(), 99999);
	gObjectivePhaseNumber = 2;
	iv_defend_portal();
	upgrade_health_and_healing();
	PlayEffect(
		AllPlayers(),
		PlayEffect.BadExplosion,
		Color.Red,
		gIvDomObjectivePos + 1.11 * Up(),
		10
	);
	PlayEffect(
		AllPlayers(),
		PlayEffect.ExplosionSound,
		Color.White,
		EventPlayer(),
		200
	);
	BigMessage(AllPlayers(), "Portal is closing! Gained bonus health");
	StopForcingPlayerPosition(EventPlayer());
	EnableMovementCollisionWithEnvironment(EventPlayer());
	Wait(0.25, WaitBehavior.IgnoreCondition);
	Teleport(EventPlayer(), 1000 * Down());
	SetInvisible(EventPlayer(), InvisibleTo.None);
}

rule: "IV Team 2 Slot 0: Portal Closing (Phase 2) -> Kill remaining (Phase 3)"
Event.OngoingPlayer
Team.Team2
Player.Slot0
if (gObjectivePhaseNumber == 2)
{
	for (gObjectiveProgress = 100; 25; -1)
	{
		Wait(0.096, WaitBehavior.IgnoreCondition);
	}
	gEnableNormalSpawns = true;
	async! play_incoming_sound_twice();
	for (gObjectiveProgress = 25; 10; -1)
	{
		Wait(0.096, WaitBehavior.IgnoreCondition);
	}
	gEnableObjectiveEnemySpawns = true;
	for (gObjectiveProgress = 10; 0; -1)
	{
		Wait(0.096, WaitBehavior.IgnoreCondition);
	}
	start_kill_remaining_phase();
}

rule: "IV Team 2 Torbjörn: Set Breakpoint Damage Reduction"
Event.OngoingPlayer
Team.Team2
Player.Torbjorn
if (gObjectivePhaseNumber == 1)
if (pAbVar2 >= TotalTimeElapsed() || gSpecialSpawnsCount > 0)
{
	SetDamageReceived(EventPlayer(), 5);
	WaitUntil(
		!(
			gObjectivePhaseNumber == 1 && (pAbVar2 >= TotalTimeElapsed() || gSpecialSpawnsCount > 0)
		),
		99999
	);
	SetDamageReceived(EventPlayer(), 50);
}

rule: "IV Team 1 Moira: Biotic Grasp on Portal Simulation"
Event.OngoingPlayer
Team.Team1
Player.Moira
if (gGamemode == 0)
if (gObjectivePhaseNumber == 1)
if (EventPlayer().IsFiringSecondary())
{
	if (
		DistanceBetween(
			EventPlayer().EyePosition(),
			gIvDomObjectivePos + 1.11 * Up()
		) <= 20 && IsInLineOfSight(
			EventPlayer().EyePosition(),
			gIvDomObjectivePos + 1.11 * Up(),
			BarrierLOS.NoBarriersBlock
		)
	)
	{
		# If Facing ray intersects sphere
		if (
			DistanceBetween(
				gIvDomObjectivePos + 1.11 * Up(),
				EventPlayer().EyePosition() + Max(
					0,
					DotProduct(
						EventPlayer().FacingDirection(),
						VectorTowards(
							EventPlayer().EyePosition(),
							gIvDomObjectivePos + 1.11 * Up()
						)
					)
				) * EventPlayer().FacingDirection()
			) <= 0.85
		)
		{
			Damage(PlayersInSlot(0, Team.Team2), EventPlayer(), 9.6);
		}
	}
	Wait(0.192, WaitBehavior.IgnoreCondition);
	LoopIfConditionIsTrue();
}
