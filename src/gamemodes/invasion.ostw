/** Invasion gamemode has a portal spawning enemy units that needs to be destroyed.
 * On destruction a boss enemy spawns.
 * The boss can use the same dummy as the portal.
*/

import "../bots.ostw";
import "../gamestate.ostw";

// Mark one bot as the portal.
// Select a position to place the portal in.
// Damage phases.
// Spawn boss at the end, reuse dummy.
// Health bar HUD element.
// Portal effects.
// Sombra is an issue: EMP.

Number PORTAL_HEALTH: 200;
Number PORTAL_SIZE_SCALAR: 2;
Number PORTAL_PHASES: 3;
Number BOSS_SIZE_SCALAR: 1.5;
Number BOSS_HEALTH_SCALAR: 100;
Number BOSS_KNOCKBACK_SCALAR: 50;
Number BOSS_SPEED_SCALAR: 100;
Number BOSS_HEALING_SCALAR: 20;

globalvar Vector g_portalPosition = Vector(-6, 3, 6);

# Global reference to the portal boss
globalvar Player g_invasionBoss;
globalvar Number g_portalPhase;

rule: "[INVASION] Initialise gamemode"
if (g_gamemode == Gamemode_HS.Invasion)
{
	# Done this way so Kanezaka kinda works
	if (CurrentMap() == Map.Kanezaka)
	{ g_portalPosition = NearestWalkablePosition(Vector(-6, 3, 6)) + Vector(0, 3, 0); }

	g_reserved += 1;
	g_invasionBoss = PlayersInSlot(0, Team.Team2);
	g_invasionBoss.p_botType = BotType_HS.Portal;
	StartForcingDummyBotName(g_invasionBoss, "Invasion Boss");
	PreloadHero(g_invasionBoss, Hero.WreckingBall);
}

rule: "[INVASION] Setup portal when round starts"
Event.OngoingPlayer
Team.Team2
if (g_gamemode == Gamemode_HS.Invasion)
//> If the portal bot is reused as the end of round boss, then this will cause issues.
if (g_roundInProgress)
if (p_botType == BotType_HS.Portal)
{
	g_portalPhase = PORTAL_PHASES - 1;
	g_invasionBoss.p_botType = BotType_HS.Portal;
	BigMessage(AllPlayers(Team.Team1), "Find and destroy the portal");
	# Need to set all the bot settings here every round
	//> Reconsider this, should players be able to stand on the portal?
	DisableMovementCollisionWithPlayers();
	SetGravity(EventPlayer(), ZERO);
	SetMoveSpeed(EventPlayer(), ZERO);
	SetKnockbackReceived(EventPlayer(), ZERO);
	SetHealingReceived(EventPlayer(), ZERO);
	SetJumpEnabled(EventPlayer(), false);
	SetCrouchEnabled(EventPlayer(), false);
	SetMeleeEnabled(EventPlayer(), false);
	SetPrimaryFireEnabled(EventPlayer(), false);
	SetSecondaryFireEnabled(EventPlayer(), false);
	// Possibly do something with adaptive shields?
	//SetAbility2Enabled(EventPlayer(), false);
	// Possibly do something with mines?
	//SetUltimateAbilityEnabled(EventPlayer(), false);
	StartScalingPlayer(EventPlayer(), PORTAL_SIZE_SCALAR, false);
	# Lock the bot at the portal location, works for everything except charge
	StartForcingPlayerPosition(EventPlayer(), g_portalPosition, false);
	# Necessary delay
	Wait(0.05);
	# Start forcing the hero since it will have been different in the previous round
	ForcePlayerHero(EventPlayer(), Hero.WreckingBall);
	# This reduces ball down to 7 health, mostly removing armour health
	SetMaxHealth(EventPlayer(), ZERO);
	AddHealthPoolToPlayer(
		EventPlayer(),
		HealthType.Health,
		PORTAL_HEALTH - 7,
		true,
		false
	);
	SetStatus(EventPlayer(), null, Status.Unkillable, 9999);
}

rule: "[INVASION] Make sure wrecking ball portal stays in ball form"
Event.OngoingPlayer
Team.Team2
Player.WreckingBall
if (g_gamemode == Gamemode_HS.Invasion)
if (p_botType == BotType_HS.Portal)
if (IsAlive())
if (IsInAlternateForm() == false)
{
	PressButton(EventPlayer(), Button.Ability1);
	Wait(0.5);
	LoopIfConditionIsTrue();
}

rule: "[INVASION] Make portal immune to sleep"
Event.OnDamageTaken
Team.Team2
Player.WreckingBall
if (g_gamemode == Gamemode_HS.Invasion)
if (p_botType == BotType_HS.Portal)
if (Attacker().Hero() == Hero.Ana)
if (EventAbility() == Button.Ability1)
{ SetStatus(EventPlayer(), null, Status.PhasedOut, 0.016); }

rule: "[INVASION] Make portal immediately recover from knockdown"
Event.OngoingPlayer
Team.Team2
Player.WreckingBall
if (g_gamemode == Gamemode_HS.Invasion)
if (p_botType == BotType_HS.Portal)
if (HasStatus(EventPlayer(), Status.KnockedDown))
{ ClearStatus(EventPlayer(), Status.KnockedDown); }

rule: "[INVASION] Portal damage phases"
Event.OnDamageTaken
Team.Team2
Player.WreckingBall
if (g_gamemode == Gamemode_HS.Invasion)
if (p_botType == BotType_HS.Portal)
if (NormalizedHealth(EventPlayer()) < 0.01)
if (g_portalPhase)
{
	SetPlayerHealth(EventPlayer(), EventPlayer().MaxHealth());
	if (g_portalPhase == 1)
	{ ClearStatus(EventPlayer(), Status.Unkillable); }
	g_portalPhase -= ONE;
}

rule: "[INVASION] Destroying portal spawns boss"
Event.OnDeath
Team.Team2
Player.WreckingBall
if (g_gamemode == Gamemode_HS.Invasion)
if (p_botType == BotType_HS.Portal)
{
	p_botType = BotType_HS.Boss;
	BigMessage(AllPlayers(Team.Team1), "Portal destroyed");
	EnableMovementCollisionWithPlayers();
	SetGravity(EventPlayer(), 100);
	SetMoveSpeed(EventPlayer(), BOSS_SPEED_SCALAR);
	SetKnockbackReceived(EventPlayer(), BOSS_KNOCKBACK_SCALAR);
	SetHealingReceived(EventPlayer(), BOSS_HEALING_SCALAR);
	SetJumpEnabled(EventPlayer(), true);
	SetCrouchEnabled(EventPlayer(), true);
	SetMeleeEnabled(EventPlayer(), true);
	SetPrimaryFireEnabled(EventPlayer(), true);
	SetSecondaryFireEnabled(EventPlayer(), true);
	// Possibly do something with adaptive shields?
	//SetAbility2Enabled(EventPlayer(), false);
	// Possibly do something with mines?
	//SetUltimateAbilityEnabled(EventPlayer(), false);
	StartScalingPlayer(EventPlayer(), BOSS_SIZE_SCALAR, false);
	RemoveAllHealthPoolsFromPlayer();
	SetMaxHealth(EventPlayer(), BOSS_HEALTH_SCALAR);
	Wait(ONE);
	Respawn();
	# Necessary delay
	Wait(0.05);
	# Start forcing the hero since it will have been different in the previous round
	ForcePlayerHero(
		EventPlayer(),
		AllHeroes().Random()
	);
	Wait(ONE);
	StopForcingPlayerPosition();
}

rule: "[INVASION] End round when non-portal boss dies"
Event.OnDeath
Team.Team2
if (g_gamemode == Gamemode_HS.Invasion)
if (g_currentRound)
if (p_botType == BotType_HS.Boss)
{
	p_botType = BotType_HS.Portal;
	g_roundInProgress = false;
}
